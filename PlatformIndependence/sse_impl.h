// Do not edit this file, it's automatically generated.
#ifdef WIN32
#define _pi_mm_abs_epi16 _mm_abs_epi16
#else
#define _pi_mm_abs_epi16(a) from_native_obj(_mm_abs_epi16((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_abs_epi32 _mm_abs_epi32
#else
#define _pi_mm_abs_epi32(a) from_native_obj(_mm_abs_epi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_abs_epi8 _mm_abs_epi8
#else
#define _pi_mm_abs_epi8(a) from_native_obj(_mm_abs_epi8((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_abs_pi16 _mm_abs_pi16
#else
#define _pi_mm_abs_pi16(a) from_native_obj(_mm_abs_pi16((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_abs_pi32 _mm_abs_pi32
#else
#define _pi_mm_abs_pi32(a) from_native_obj(_mm_abs_pi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_abs_pi8 _mm_abs_pi8
#else
#define _pi_mm_abs_pi8(a) from_native_obj(_mm_abs_pi8((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_epi16 _mm_add_epi16
#else
#define _pi_mm_add_epi16(a, b)                                                 \
    from_native_obj(_mm_add_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_epi32 _mm_add_epi32
#else
#define _pi_mm_add_epi32(a, b)                                                 \
    from_native_obj(_mm_add_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_epi64 _mm_add_epi64
#else
#define _pi_mm_add_epi64(a, b)                                                 \
    from_native_obj(_mm_add_epi64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_epi8 _mm_add_epi8
#else
#define _pi_mm_add_epi8(a, b)                                                  \
    from_native_obj(_mm_add_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_pd _mm_add_pd
#else
#define _pi_mm_add_pd(a, b)                                                    \
    from_native_obj(_mm_add_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_pi16 _mm_add_pi16
#else
#define _pi_mm_add_pi16(a, b)                                                  \
    from_native_obj(_mm_add_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_pi32 _mm_add_pi32
#else
#define _pi_mm_add_pi32(a, b)                                                  \
    from_native_obj(_mm_add_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_pi8 _mm_add_pi8
#else
#define _pi_mm_add_pi8(a, b)                                                   \
    from_native_obj(_mm_add_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_ps _mm_add_ps
#else
#define _pi_mm_add_ps(a, b)                                                    \
    from_native_obj(_mm_add_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_sd _mm_add_sd
#else
#define _pi_mm_add_sd(a, b)                                                    \
    from_native_obj(_mm_add_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_si64 _mm_add_si64
#else
#define _pi_mm_add_si64(a, b)                                                  \
    from_native_obj(_mm_add_si64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_add_ss _mm_add_ss
#else
#define _pi_mm_add_ss(a, b)                                                    \
    from_native_obj(_mm_add_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_adds_epi16 _mm_adds_epi16
#else
#define _pi_mm_adds_epi16(a, b)                                                \
    from_native_obj(_mm_adds_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_adds_epi8 _mm_adds_epi8
#else
#define _pi_mm_adds_epi8(a, b)                                                 \
    from_native_obj(_mm_adds_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_adds_epu16 _mm_adds_epu16
#else
#define _pi_mm_adds_epu16(a, b)                                                \
    from_native_obj(_mm_adds_epu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_adds_epu8 _mm_adds_epu8
#else
#define _pi_mm_adds_epu8(a, b)                                                 \
    from_native_obj(_mm_adds_epu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_adds_pi16 _mm_adds_pi16
#else
#define _pi_mm_adds_pi16(a, b)                                                 \
    from_native_obj(_mm_adds_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_adds_pi8 _mm_adds_pi8
#else
#define _pi_mm_adds_pi8(a, b)                                                  \
    from_native_obj(_mm_adds_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_adds_pu16 _mm_adds_pu16
#else
#define _pi_mm_adds_pu16(a, b)                                                 \
    from_native_obj(_mm_adds_pu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_adds_pu8 _mm_adds_pu8
#else
#define _pi_mm_adds_pu8(a, b)                                                  \
    from_native_obj(_mm_adds_pu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_addsub_pd _mm_addsub_pd
#else
#define _pi_mm_addsub_pd(a, b)                                                 \
    from_native_obj(_mm_addsub_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_addsub_ps _mm_addsub_ps
#else
#define _pi_mm_addsub_ps(a, b)                                                 \
    from_native_obj(_mm_addsub_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_alignr_epi8 _mm_alignr_epi8
#else
#define _pi_mm_alignr_epi8(a, b, count)                                        \
    from_native_obj(_mm_alignr_epi8((a).native_obj, (b).native_obj, count))
#endif
#ifdef WIN32
#define _pi_mm_alignr_pi8 _mm_alignr_pi8
#else
#define _pi_mm_alignr_pi8(a, b, count)                                         \
    from_native_obj(_mm_alignr_pi8((a).native_obj, (b).native_obj, count))
#endif
#ifdef WIN32
#define _pi_mm_and_pd _mm_and_pd
#else
#define _pi_mm_and_pd(a, b)                                                    \
    from_native_obj(_mm_and_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_and_ps _mm_and_ps
#else
#define _pi_mm_and_ps(a, b)                                                    \
    from_native_obj(_mm_and_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_and_si128 _mm_and_si128
#else
#define _pi_mm_and_si128(a, b)                                                 \
    from_native_obj(_mm_and_si128((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_and_si64 _mm_and_si64
#else
#define _pi_mm_and_si64(a, b)                                                  \
    from_native_obj(_mm_and_si64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_andnot_pd _mm_andnot_pd
#else
#define _pi_mm_andnot_pd(a, b)                                                 \
    from_native_obj(_mm_andnot_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_andnot_ps _mm_andnot_ps
#else
#define _pi_mm_andnot_ps(a, b)                                                 \
    from_native_obj(_mm_andnot_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_andnot_si128 _mm_andnot_si128
#else
#define _pi_mm_andnot_si128(a, b)                                              \
    from_native_obj(_mm_andnot_si128((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_andnot_si64 _mm_andnot_si64
#else
#define _pi_mm_andnot_si64(a, b)                                               \
    from_native_obj(_mm_andnot_si64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_avg_epu16 _mm_avg_epu16
#else
#define _pi_mm_avg_epu16(a, b)                                                 \
    from_native_obj(_mm_avg_epu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_avg_epu8 _mm_avg_epu8
#else
#define _pi_mm_avg_epu8(a, b)                                                  \
    from_native_obj(_mm_avg_epu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_avg_pu16 _mm_avg_pu16
#else
#define _pi_mm_avg_pu16(a, b)                                                  \
    from_native_obj(_mm_avg_pu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_avg_pu8 _mm_avg_pu8
#else
#define _pi_mm_avg_pu8(a, b)                                                   \
    from_native_obj(_mm_avg_pu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_blend_epi16 _mm_blend_epi16
#else
#define _pi_mm_blend_epi16(a, b, imm8)                                         \
    from_native_obj(_mm_blend_epi16((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_blend_pd _mm_blend_pd
#else
#define _pi_mm_blend_pd(a, b, imm8)                                            \
    from_native_obj(_mm_blend_pd((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_blend_ps _mm_blend_ps
#else
#define _pi_mm_blend_ps(a, b, imm8)                                            \
    from_native_obj(_mm_blend_ps((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_blendv_epi8 _mm_blendv_epi8
#else
#define _pi_mm_blendv_epi8(a, b, mask)                                         \
    from_native_obj(                                                           \
        _mm_blendv_epi8((a).native_obj, (b).native_obj, (mask).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_blendv_pd _mm_blendv_pd
#else
#define _pi_mm_blendv_pd(a, b, mask)                                           \
    from_native_obj(                                                           \
        _mm_blendv_pd((a).native_obj, (b).native_obj, (mask).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_blendv_ps _mm_blendv_ps
#else
#define _pi_mm_blendv_ps(a, b, mask)                                           \
    from_native_obj(                                                           \
        _mm_blendv_ps((a).native_obj, (b).native_obj, (mask).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_bslli_si128 _mm_bslli_si128
#else
#define _pi_mm_bslli_si128(a, imm8)                                            \
    from_native_obj(_mm_bslli_si128((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_bsrli_si128 _mm_bsrli_si128
#else
#define _pi_mm_bsrli_si128(a, imm8)                                            \
    from_native_obj(_mm_bsrli_si128((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_castpd_ps _mm_castpd_ps
#else
#define _pi_mm_castpd_ps(a) from_native_obj(_mm_castpd_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_castpd_si128 _mm_castpd_si128
#else
#define _pi_mm_castpd_si128(a) from_native_obj(_mm_castpd_si128((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_castps_pd _mm_castps_pd
#else
#define _pi_mm_castps_pd(a) from_native_obj(_mm_castps_pd((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_castps_si128 _mm_castps_si128
#else
#define _pi_mm_castps_si128(a) from_native_obj(_mm_castps_si128((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_castsi128_pd _mm_castsi128_pd
#else
#define _pi_mm_castsi128_pd(a) from_native_obj(_mm_castsi128_pd((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_castsi128_ps _mm_castsi128_ps
#else
#define _pi_mm_castsi128_ps(a) from_native_obj(_mm_castsi128_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_ceil_pd _mm_ceil_pd
#else
#define _pi_mm_ceil_pd(a) from_native_obj(_mm_ceil_pd((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_ceil_ps _mm_ceil_ps
#else
#define _pi_mm_ceil_ps(a) from_native_obj(_mm_ceil_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_ceil_sd _mm_ceil_sd
#else
#define _pi_mm_ceil_sd(a, b)                                                   \
    from_native_obj(_mm_ceil_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_ceil_ss _mm_ceil_ss
#else
#define _pi_mm_ceil_ss(a, b)                                                   \
    from_native_obj(_mm_ceil_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_clflush _mm_clflush
#else
#define _pi_mm_clflush(p) _mm_clflush(p)
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_epi16 _mm_cmpeq_epi16
#else
#define _pi_mm_cmpeq_epi16(a, b)                                               \
    from_native_obj(_mm_cmpeq_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_epi32 _mm_cmpeq_epi32
#else
#define _pi_mm_cmpeq_epi32(a, b)                                               \
    from_native_obj(_mm_cmpeq_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_epi64 _mm_cmpeq_epi64
#else
#define _pi_mm_cmpeq_epi64(a, b)                                               \
    from_native_obj(_mm_cmpeq_epi64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_epi8 _mm_cmpeq_epi8
#else
#define _pi_mm_cmpeq_epi8(a, b)                                                \
    from_native_obj(_mm_cmpeq_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_pd _mm_cmpeq_pd
#else
#define _pi_mm_cmpeq_pd(a, b)                                                  \
    from_native_obj(_mm_cmpeq_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_pi16 _mm_cmpeq_pi16
#else
#define _pi_mm_cmpeq_pi16(a, b)                                                \
    from_native_obj(_mm_cmpeq_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_pi32 _mm_cmpeq_pi32
#else
#define _pi_mm_cmpeq_pi32(a, b)                                                \
    from_native_obj(_mm_cmpeq_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_pi8 _mm_cmpeq_pi8
#else
#define _pi_mm_cmpeq_pi8(a, b)                                                 \
    from_native_obj(_mm_cmpeq_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_ps _mm_cmpeq_ps
#else
#define _pi_mm_cmpeq_ps(a, b)                                                  \
    from_native_obj(_mm_cmpeq_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_sd _mm_cmpeq_sd
#else
#define _pi_mm_cmpeq_sd(a, b)                                                  \
    from_native_obj(_mm_cmpeq_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpeq_ss _mm_cmpeq_ss
#else
#define _pi_mm_cmpeq_ss(a, b)                                                  \
    from_native_obj(_mm_cmpeq_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpestra _mm_cmpestra
#else
#define _pi_mm_cmpestra(a, la, b, lb, imm8)                                    \
    _mm_cmpestra((a).native_obj, la, (b).native_obj, lb, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpestrc _mm_cmpestrc
#else
#define _pi_mm_cmpestrc(a, la, b, lb, imm8)                                    \
    _mm_cmpestrc((a).native_obj, la, (b).native_obj, lb, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpestri _mm_cmpestri
#else
#define _pi_mm_cmpestri(a, la, b, lb, imm8)                                    \
    _mm_cmpestri((a).native_obj, la, (b).native_obj, lb, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpestrm _mm_cmpestrm
#else
#define _pi_mm_cmpestrm(a, la, b, lb, imm8)                                    \
    from_native_obj(_mm_cmpestrm((a).native_obj, la, (b).native_obj, lb, imm8))
#endif
#ifdef WIN32
#define _pi_mm_cmpestro _mm_cmpestro
#else
#define _pi_mm_cmpestro(a, la, b, lb, imm8)                                    \
    _mm_cmpestro((a).native_obj, la, (b).native_obj, lb, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpestrs _mm_cmpestrs
#else
#define _pi_mm_cmpestrs(a, la, b, lb, imm8)                                    \
    _mm_cmpestrs((a).native_obj, la, (b).native_obj, lb, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpestrz _mm_cmpestrz
#else
#define _pi_mm_cmpestrz(a, la, b, lb, imm8)                                    \
    _mm_cmpestrz((a).native_obj, la, (b).native_obj, lb, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpge_pd _mm_cmpge_pd
#else
#define _pi_mm_cmpge_pd(a, b)                                                  \
    from_native_obj(_mm_cmpge_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpge_ps _mm_cmpge_ps
#else
#define _pi_mm_cmpge_ps(a, b)                                                  \
    from_native_obj(_mm_cmpge_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpge_sd _mm_cmpge_sd
#else
#define _pi_mm_cmpge_sd(a, b)                                                  \
    from_native_obj(_mm_cmpge_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpge_ss _mm_cmpge_ss
#else
#define _pi_mm_cmpge_ss(a, b)                                                  \
    from_native_obj(_mm_cmpge_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_epi16 _mm_cmpgt_epi16
#else
#define _pi_mm_cmpgt_epi16(a, b)                                               \
    from_native_obj(_mm_cmpgt_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_epi32 _mm_cmpgt_epi32
#else
#define _pi_mm_cmpgt_epi32(a, b)                                               \
    from_native_obj(_mm_cmpgt_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_epi64 _mm_cmpgt_epi64
#else
#define _pi_mm_cmpgt_epi64(a, b)                                               \
    from_native_obj(_mm_cmpgt_epi64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_epi8 _mm_cmpgt_epi8
#else
#define _pi_mm_cmpgt_epi8(a, b)                                                \
    from_native_obj(_mm_cmpgt_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_pd _mm_cmpgt_pd
#else
#define _pi_mm_cmpgt_pd(a, b)                                                  \
    from_native_obj(_mm_cmpgt_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_pi16 _mm_cmpgt_pi16
#else
#define _pi_mm_cmpgt_pi16(a, b)                                                \
    from_native_obj(_mm_cmpgt_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_pi32 _mm_cmpgt_pi32
#else
#define _pi_mm_cmpgt_pi32(a, b)                                                \
    from_native_obj(_mm_cmpgt_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_pi8 _mm_cmpgt_pi8
#else
#define _pi_mm_cmpgt_pi8(a, b)                                                 \
    from_native_obj(_mm_cmpgt_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_ps _mm_cmpgt_ps
#else
#define _pi_mm_cmpgt_ps(a, b)                                                  \
    from_native_obj(_mm_cmpgt_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_sd _mm_cmpgt_sd
#else
#define _pi_mm_cmpgt_sd(a, b)                                                  \
    from_native_obj(_mm_cmpgt_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpgt_ss _mm_cmpgt_ss
#else
#define _pi_mm_cmpgt_ss(a, b)                                                  \
    from_native_obj(_mm_cmpgt_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpistra _mm_cmpistra
#else
#define _pi_mm_cmpistra(a, b, imm8)                                            \
    _mm_cmpistra((a).native_obj, (b).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpistrc _mm_cmpistrc
#else
#define _pi_mm_cmpistrc(a, b, imm8)                                            \
    _mm_cmpistrc((a).native_obj, (b).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpistri _mm_cmpistri
#else
#define _pi_mm_cmpistri(a, b, imm8)                                            \
    _mm_cmpistri((a).native_obj, (b).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpistrm _mm_cmpistrm
#else
#define _pi_mm_cmpistrm(a, b, imm8)                                            \
    from_native_obj(_mm_cmpistrm((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_cmpistro _mm_cmpistro
#else
#define _pi_mm_cmpistro(a, b, imm8)                                            \
    _mm_cmpistro((a).native_obj, (b).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpistrs _mm_cmpistrs
#else
#define _pi_mm_cmpistrs(a, b, imm8)                                            \
    _mm_cmpistrs((a).native_obj, (b).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmpistrz _mm_cmpistrz
#else
#define _pi_mm_cmpistrz(a, b, imm8)                                            \
    _mm_cmpistrz((a).native_obj, (b).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_cmple_pd _mm_cmple_pd
#else
#define _pi_mm_cmple_pd(a, b)                                                  \
    from_native_obj(_mm_cmple_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmple_ps _mm_cmple_ps
#else
#define _pi_mm_cmple_ps(a, b)                                                  \
    from_native_obj(_mm_cmple_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmple_sd _mm_cmple_sd
#else
#define _pi_mm_cmple_sd(a, b)                                                  \
    from_native_obj(_mm_cmple_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmple_ss _mm_cmple_ss
#else
#define _pi_mm_cmple_ss(a, b)                                                  \
    from_native_obj(_mm_cmple_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmplt_epi16 _mm_cmplt_epi16
#else
#define _pi_mm_cmplt_epi16(a, b)                                               \
    from_native_obj(_mm_cmplt_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmplt_epi32 _mm_cmplt_epi32
#else
#define _pi_mm_cmplt_epi32(a, b)                                               \
    from_native_obj(_mm_cmplt_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmplt_epi8 _mm_cmplt_epi8
#else
#define _pi_mm_cmplt_epi8(a, b)                                                \
    from_native_obj(_mm_cmplt_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmplt_pd _mm_cmplt_pd
#else
#define _pi_mm_cmplt_pd(a, b)                                                  \
    from_native_obj(_mm_cmplt_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmplt_ps _mm_cmplt_ps
#else
#define _pi_mm_cmplt_ps(a, b)                                                  \
    from_native_obj(_mm_cmplt_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmplt_sd _mm_cmplt_sd
#else
#define _pi_mm_cmplt_sd(a, b)                                                  \
    from_native_obj(_mm_cmplt_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmplt_ss _mm_cmplt_ss
#else
#define _pi_mm_cmplt_ss(a, b)                                                  \
    from_native_obj(_mm_cmplt_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpneq_pd _mm_cmpneq_pd
#else
#define _pi_mm_cmpneq_pd(a, b)                                                 \
    from_native_obj(_mm_cmpneq_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpneq_ps _mm_cmpneq_ps
#else
#define _pi_mm_cmpneq_ps(a, b)                                                 \
    from_native_obj(_mm_cmpneq_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpneq_sd _mm_cmpneq_sd
#else
#define _pi_mm_cmpneq_sd(a, b)                                                 \
    from_native_obj(_mm_cmpneq_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpneq_ss _mm_cmpneq_ss
#else
#define _pi_mm_cmpneq_ss(a, b)                                                 \
    from_native_obj(_mm_cmpneq_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnge_pd _mm_cmpnge_pd
#else
#define _pi_mm_cmpnge_pd(a, b)                                                 \
    from_native_obj(_mm_cmpnge_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnge_ps _mm_cmpnge_ps
#else
#define _pi_mm_cmpnge_ps(a, b)                                                 \
    from_native_obj(_mm_cmpnge_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnge_sd _mm_cmpnge_sd
#else
#define _pi_mm_cmpnge_sd(a, b)                                                 \
    from_native_obj(_mm_cmpnge_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnge_ss _mm_cmpnge_ss
#else
#define _pi_mm_cmpnge_ss(a, b)                                                 \
    from_native_obj(_mm_cmpnge_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpngt_pd _mm_cmpngt_pd
#else
#define _pi_mm_cmpngt_pd(a, b)                                                 \
    from_native_obj(_mm_cmpngt_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpngt_ps _mm_cmpngt_ps
#else
#define _pi_mm_cmpngt_ps(a, b)                                                 \
    from_native_obj(_mm_cmpngt_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpngt_sd _mm_cmpngt_sd
#else
#define _pi_mm_cmpngt_sd(a, b)                                                 \
    from_native_obj(_mm_cmpngt_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpngt_ss _mm_cmpngt_ss
#else
#define _pi_mm_cmpngt_ss(a, b)                                                 \
    from_native_obj(_mm_cmpngt_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnle_pd _mm_cmpnle_pd
#else
#define _pi_mm_cmpnle_pd(a, b)                                                 \
    from_native_obj(_mm_cmpnle_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnle_ps _mm_cmpnle_ps
#else
#define _pi_mm_cmpnle_ps(a, b)                                                 \
    from_native_obj(_mm_cmpnle_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnle_sd _mm_cmpnle_sd
#else
#define _pi_mm_cmpnle_sd(a, b)                                                 \
    from_native_obj(_mm_cmpnle_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnle_ss _mm_cmpnle_ss
#else
#define _pi_mm_cmpnle_ss(a, b)                                                 \
    from_native_obj(_mm_cmpnle_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnlt_pd _mm_cmpnlt_pd
#else
#define _pi_mm_cmpnlt_pd(a, b)                                                 \
    from_native_obj(_mm_cmpnlt_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnlt_ps _mm_cmpnlt_ps
#else
#define _pi_mm_cmpnlt_ps(a, b)                                                 \
    from_native_obj(_mm_cmpnlt_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnlt_sd _mm_cmpnlt_sd
#else
#define _pi_mm_cmpnlt_sd(a, b)                                                 \
    from_native_obj(_mm_cmpnlt_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpnlt_ss _mm_cmpnlt_ss
#else
#define _pi_mm_cmpnlt_ss(a, b)                                                 \
    from_native_obj(_mm_cmpnlt_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpord_pd _mm_cmpord_pd
#else
#define _pi_mm_cmpord_pd(a, b)                                                 \
    from_native_obj(_mm_cmpord_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpord_ps _mm_cmpord_ps
#else
#define _pi_mm_cmpord_ps(a, b)                                                 \
    from_native_obj(_mm_cmpord_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpord_sd _mm_cmpord_sd
#else
#define _pi_mm_cmpord_sd(a, b)                                                 \
    from_native_obj(_mm_cmpord_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpord_ss _mm_cmpord_ss
#else
#define _pi_mm_cmpord_ss(a, b)                                                 \
    from_native_obj(_mm_cmpord_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpunord_pd _mm_cmpunord_pd
#else
#define _pi_mm_cmpunord_pd(a, b)                                               \
    from_native_obj(_mm_cmpunord_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpunord_ps _mm_cmpunord_ps
#else
#define _pi_mm_cmpunord_ps(a, b)                                               \
    from_native_obj(_mm_cmpunord_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpunord_sd _mm_cmpunord_sd
#else
#define _pi_mm_cmpunord_sd(a, b)                                               \
    from_native_obj(_mm_cmpunord_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cmpunord_ss _mm_cmpunord_ss
#else
#define _pi_mm_cmpunord_ss(a, b)                                               \
    from_native_obj(_mm_cmpunord_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_comieq_sd _mm_comieq_sd
#else
#define _pi_mm_comieq_sd(a, b) _mm_comieq_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comieq_ss _mm_comieq_ss
#else
#define _pi_mm_comieq_ss(a, b) _mm_comieq_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comige_sd _mm_comige_sd
#else
#define _pi_mm_comige_sd(a, b) _mm_comige_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comige_ss _mm_comige_ss
#else
#define _pi_mm_comige_ss(a, b) _mm_comige_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comigt_sd _mm_comigt_sd
#else
#define _pi_mm_comigt_sd(a, b) _mm_comigt_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comigt_ss _mm_comigt_ss
#else
#define _pi_mm_comigt_ss(a, b) _mm_comigt_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comile_sd _mm_comile_sd
#else
#define _pi_mm_comile_sd(a, b) _mm_comile_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comile_ss _mm_comile_ss
#else
#define _pi_mm_comile_ss(a, b) _mm_comile_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comilt_sd _mm_comilt_sd
#else
#define _pi_mm_comilt_sd(a, b) _mm_comilt_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comilt_ss _mm_comilt_ss
#else
#define _pi_mm_comilt_ss(a, b) _mm_comilt_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comineq_sd _mm_comineq_sd
#else
#define _pi_mm_comineq_sd(a, b) _mm_comineq_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_comineq_ss _mm_comineq_ss
#else
#define _pi_mm_comineq_ss(a, b) _mm_comineq_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_crc32_u16 _mm_crc32_u16
#else
#define _pi_mm_crc32_u16(crc, v) _mm_crc32_u16(crc, v)
#endif
#ifdef WIN32
#define _pi_mm_crc32_u32 _mm_crc32_u32
#else
#define _pi_mm_crc32_u32(crc, v) _mm_crc32_u32(crc, v)
#endif
#ifdef WIN32
#define _pi_mm_crc32_u8 _mm_crc32_u8
#else
#define _pi_mm_crc32_u8(crc, v) _mm_crc32_u8(crc, v)
#endif
#ifdef WIN32
#define _pi_mm_cvt_pi2ps _mm_cvt_pi2ps
#else
#define _pi_mm_cvt_pi2ps(a, b)                                                 \
    from_native_obj(_mm_cvt_pi2ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvt_ps2pi _mm_cvt_ps2pi
#else
#define _pi_mm_cvt_ps2pi(a) from_native_obj(_mm_cvt_ps2pi((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvt_si2ss _mm_cvt_si2ss
#else
#define _pi_mm_cvt_si2ss(a, b) from_native_obj(_mm_cvt_si2ss((a).native_obj, b))
#endif
#ifdef WIN32
#define _pi_mm_cvt_ss2si _mm_cvt_ss2si
#else
#define _pi_mm_cvt_ss2si(a) _mm_cvt_ss2si((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtepi16_epi32 _mm_cvtepi16_epi32
#else
#define _pi_mm_cvtepi16_epi32(a)                                               \
    from_native_obj(_mm_cvtepi16_epi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepi16_epi64 _mm_cvtepi16_epi64
#else
#define _pi_mm_cvtepi16_epi64(a)                                               \
    from_native_obj(_mm_cvtepi16_epi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepi32_epi64 _mm_cvtepi32_epi64
#else
#define _pi_mm_cvtepi32_epi64(a)                                               \
    from_native_obj(_mm_cvtepi32_epi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepi32_pd _mm_cvtepi32_pd
#else
#define _pi_mm_cvtepi32_pd(a) from_native_obj(_mm_cvtepi32_pd((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepi32_ps _mm_cvtepi32_ps
#else
#define _pi_mm_cvtepi32_ps(a) from_native_obj(_mm_cvtepi32_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepi8_epi16 _mm_cvtepi8_epi16
#else
#define _pi_mm_cvtepi8_epi16(a)                                                \
    from_native_obj(_mm_cvtepi8_epi16((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepi8_epi32 _mm_cvtepi8_epi32
#else
#define _pi_mm_cvtepi8_epi32(a)                                                \
    from_native_obj(_mm_cvtepi8_epi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepi8_epi64 _mm_cvtepi8_epi64
#else
#define _pi_mm_cvtepi8_epi64(a)                                                \
    from_native_obj(_mm_cvtepi8_epi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepu16_epi32 _mm_cvtepu16_epi32
#else
#define _pi_mm_cvtepu16_epi32(a)                                               \
    from_native_obj(_mm_cvtepu16_epi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepu16_epi64 _mm_cvtepu16_epi64
#else
#define _pi_mm_cvtepu16_epi64(a)                                               \
    from_native_obj(_mm_cvtepu16_epi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepu32_epi64 _mm_cvtepu32_epi64
#else
#define _pi_mm_cvtepu32_epi64(a)                                               \
    from_native_obj(_mm_cvtepu32_epi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepu8_epi16 _mm_cvtepu8_epi16
#else
#define _pi_mm_cvtepu8_epi16(a)                                                \
    from_native_obj(_mm_cvtepu8_epi16((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepu8_epi32 _mm_cvtepu8_epi32
#else
#define _pi_mm_cvtepu8_epi32(a)                                                \
    from_native_obj(_mm_cvtepu8_epi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtepu8_epi64 _mm_cvtepu8_epi64
#else
#define _pi_mm_cvtepu8_epi64(a)                                                \
    from_native_obj(_mm_cvtepu8_epi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtm64_si64 _mm_cvtm64_si64
#else
#define _pi_mm_cvtm64_si64(a) _mm_cvtm64_si64((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtpd_epi32 _mm_cvtpd_epi32
#else
#define _pi_mm_cvtpd_epi32(a) from_native_obj(_mm_cvtpd_epi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtpd_pi32 _mm_cvtpd_pi32
#else
#define _pi_mm_cvtpd_pi32(a) from_native_obj(_mm_cvtpd_pi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtpd_ps _mm_cvtpd_ps
#else
#define _pi_mm_cvtpd_ps(a) from_native_obj(_mm_cvtpd_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtpi16_ps _mm_cvtpi16_ps
#else
#define _pi_mm_cvtpi16_ps(a) from_native_obj(_mm_cvtpi16_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtpi32_pd _mm_cvtpi32_pd
#else
#define _pi_mm_cvtpi32_pd(a) from_native_obj(_mm_cvtpi32_pd((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtpi32_ps _mm_cvtpi32_ps
#else
#define _pi_mm_cvtpi32_ps(a, b)                                                \
    from_native_obj(_mm_cvtpi32_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtpi32x2_ps _mm_cvtpi32x2_ps
#else
#define _pi_mm_cvtpi32x2_ps(a, b)                                              \
    from_native_obj(_mm_cvtpi32x2_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtpi8_ps _mm_cvtpi8_ps
#else
#define _pi_mm_cvtpi8_ps(a) from_native_obj(_mm_cvtpi8_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtps_epi32 _mm_cvtps_epi32
#else
#define _pi_mm_cvtps_epi32(a) from_native_obj(_mm_cvtps_epi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtps_pd _mm_cvtps_pd
#else
#define _pi_mm_cvtps_pd(a) from_native_obj(_mm_cvtps_pd((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtps_pi16 _mm_cvtps_pi16
#else
#define _pi_mm_cvtps_pi16(a) from_native_obj(_mm_cvtps_pi16((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtps_pi32 _mm_cvtps_pi32
#else
#define _pi_mm_cvtps_pi32(a) from_native_obj(_mm_cvtps_pi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtps_pi8 _mm_cvtps_pi8
#else
#define _pi_mm_cvtps_pi8(a) from_native_obj(_mm_cvtps_pi8((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtpu16_ps _mm_cvtpu16_ps
#else
#define _pi_mm_cvtpu16_ps(a) from_native_obj(_mm_cvtpu16_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtpu8_ps _mm_cvtpu8_ps
#else
#define _pi_mm_cvtpu8_ps(a) from_native_obj(_mm_cvtpu8_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtsd_f64 _mm_cvtsd_f64
#else
#define _pi_mm_cvtsd_f64(a) _mm_cvtsd_f64((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtsd_si32 _mm_cvtsd_si32
#else
#define _pi_mm_cvtsd_si32(a) _mm_cvtsd_si32((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtsd_si64 _mm_cvtsd_si64
#else
#define _pi_mm_cvtsd_si64(a) _mm_cvtsd_si64((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtsd_si64x _mm_cvtsd_si64x
#else
#define _pi_mm_cvtsd_si64x(a) _mm_cvtsd_si64x((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtsd_ss _mm_cvtsd_ss
#else
#define _pi_mm_cvtsd_ss(a, b)                                                  \
    from_native_obj(_mm_cvtsd_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi128_si32 _mm_cvtsi128_si32
#else
#define _pi_mm_cvtsi128_si32(a) _mm_cvtsi128_si32((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtsi128_si64 _mm_cvtsi128_si64
#else
#define _pi_mm_cvtsi128_si64(a) _mm_cvtsi128_si64((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtsi128_si64x _mm_cvtsi128_si64x
#else
#define _pi_mm_cvtsi128_si64x(a) _mm_cvtsi128_si64x((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtsi32_sd _mm_cvtsi32_sd
#else
#define _pi_mm_cvtsi32_sd(a, b)                                                \
    from_native_obj(_mm_cvtsi32_sd((a).native_obj, b))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi32_si128 _mm_cvtsi32_si128
#else
#define _pi_mm_cvtsi32_si128(a) from_native_obj(_mm_cvtsi32_si128(a))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi32_si64 _mm_cvtsi32_si64
#else
#define _pi_mm_cvtsi32_si64(a) from_native_obj(_mm_cvtsi32_si64(a))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi32_ss _mm_cvtsi32_ss
#else
#define _pi_mm_cvtsi32_ss(a, b)                                                \
    from_native_obj(_mm_cvtsi32_ss((a).native_obj, b))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi64_m64 _mm_cvtsi64_m64
#else
#define _pi_mm_cvtsi64_m64(a) from_native_obj(_mm_cvtsi64_m64(a))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi64_sd _mm_cvtsi64_sd
#else
#define _pi_mm_cvtsi64_sd(a, b)                                                \
    from_native_obj(_mm_cvtsi64_sd((a).native_obj, b))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi64_si128 _mm_cvtsi64_si128
#else
#define _pi_mm_cvtsi64_si128(a) from_native_obj(_mm_cvtsi64_si128(a))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi64_si32 _mm_cvtsi64_si32
#else
#define _pi_mm_cvtsi64_si32(a) _mm_cvtsi64_si32((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtsi64_ss _mm_cvtsi64_ss
#else
#define _pi_mm_cvtsi64_ss(a, b)                                                \
    from_native_obj(_mm_cvtsi64_ss((a).native_obj, b))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi64x_sd _mm_cvtsi64x_sd
#else
#define _pi_mm_cvtsi64x_sd(a, b)                                               \
    from_native_obj(_mm_cvtsi64x_sd((a).native_obj, b))
#endif
#ifdef WIN32
#define _pi_mm_cvtsi64x_si128 _mm_cvtsi64x_si128
#else
#define _pi_mm_cvtsi64x_si128(a) from_native_obj(_mm_cvtsi64x_si128(a))
#endif
#ifdef WIN32
#define _pi_mm_cvtss_f32 _mm_cvtss_f32
#else
#define _pi_mm_cvtss_f32(a) _mm_cvtss_f32((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtss_sd _mm_cvtss_sd
#else
#define _pi_mm_cvtss_sd(a, b)                                                  \
    from_native_obj(_mm_cvtss_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtss_si32 _mm_cvtss_si32
#else
#define _pi_mm_cvtss_si32(a) _mm_cvtss_si32((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtss_si64 _mm_cvtss_si64
#else
#define _pi_mm_cvtss_si64(a) _mm_cvtss_si64((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvtt_ps2pi _mm_cvtt_ps2pi
#else
#define _pi_mm_cvtt_ps2pi(a) from_native_obj(_mm_cvtt_ps2pi((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvtt_ss2si _mm_cvtt_ss2si
#else
#define _pi_mm_cvtt_ss2si(a) _mm_cvtt_ss2si((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvttpd_epi32 _mm_cvttpd_epi32
#else
#define _pi_mm_cvttpd_epi32(a) from_native_obj(_mm_cvttpd_epi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvttpd_pi32 _mm_cvttpd_pi32
#else
#define _pi_mm_cvttpd_pi32(a) from_native_obj(_mm_cvttpd_pi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvttps_epi32 _mm_cvttps_epi32
#else
#define _pi_mm_cvttps_epi32(a) from_native_obj(_mm_cvttps_epi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvttps_pi32 _mm_cvttps_pi32
#else
#define _pi_mm_cvttps_pi32(a) from_native_obj(_mm_cvttps_pi32((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_cvttsd_si32 _mm_cvttsd_si32
#else
#define _pi_mm_cvttsd_si32(a) _mm_cvttsd_si32((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvttsd_si64 _mm_cvttsd_si64
#else
#define _pi_mm_cvttsd_si64(a) _mm_cvttsd_si64((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvttsd_si64x _mm_cvttsd_si64x
#else
#define _pi_mm_cvttsd_si64x(a) _mm_cvttsd_si64x((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvttss_si32 _mm_cvttss_si32
#else
#define _pi_mm_cvttss_si32(a) _mm_cvttss_si32((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_cvttss_si64 _mm_cvttss_si64
#else
#define _pi_mm_cvttss_si64(a) _mm_cvttss_si64((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_div_pd _mm_div_pd
#else
#define _pi_mm_div_pd(a, b)                                                    \
    from_native_obj(_mm_div_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_div_ps _mm_div_ps
#else
#define _pi_mm_div_ps(a, b)                                                    \
    from_native_obj(_mm_div_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_div_sd _mm_div_sd
#else
#define _pi_mm_div_sd(a, b)                                                    \
    from_native_obj(_mm_div_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_div_ss _mm_div_ss
#else
#define _pi_mm_div_ss(a, b)                                                    \
    from_native_obj(_mm_div_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_dp_pd _mm_dp_pd
#else
#define _pi_mm_dp_pd(a, b, imm8)                                               \
    from_native_obj(_mm_dp_pd((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_dp_ps _mm_dp_ps
#else
#define _pi_mm_dp_ps(a, b, imm8)                                               \
    from_native_obj(_mm_dp_ps((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_empty _m_empty
#else
#define _pi_m_empty() _m_empty()
#endif
#ifdef WIN32
#define _pi_mm_empty _mm_empty
#else
#define _pi_mm_empty() _mm_empty()
#endif
#ifdef WIN32
#define _pi_mm_extract_epi16 _mm_extract_epi16
#else
#define _pi_mm_extract_epi16(a, imm8) _mm_extract_epi16((a).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_extract_epi32 _mm_extract_epi32
#else
#define _pi_mm_extract_epi32(a, imm8) _mm_extract_epi32((a).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_extract_epi64 _mm_extract_epi64
#else
#define _pi_mm_extract_epi64(a, imm8) _mm_extract_epi64((a).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_extract_epi8 _mm_extract_epi8
#else
#define _pi_mm_extract_epi8(a, imm8) _mm_extract_epi8((a).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_extract_pi16 _mm_extract_pi16
#else
#define _pi_mm_extract_pi16(a, imm8) _mm_extract_pi16((a).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_extract_ps _mm_extract_ps
#else
#define _pi_mm_extract_ps(a, imm8) _mm_extract_ps((a).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_mm_floor_pd _mm_floor_pd
#else
#define _pi_mm_floor_pd(a) from_native_obj(_mm_floor_pd((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_floor_ps _mm_floor_ps
#else
#define _pi_mm_floor_ps(a) from_native_obj(_mm_floor_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_floor_sd _mm_floor_sd
#else
#define _pi_mm_floor_sd(a, b)                                                  \
    from_native_obj(_mm_floor_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_floor_ss _mm_floor_ss
#else
#define _pi_mm_floor_ss(a, b)                                                  \
    from_native_obj(_mm_floor_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_from_int _m_from_int
#else
#define _pi_m_from_int(a) from_native_obj(_m_from_int(a))
#endif
#ifdef WIN32
#define _pi_m_from_int64 _m_from_int64
#else
#define _pi_m_from_int64(a) from_native_obj(_m_from_int64(a))
#endif
#ifdef WIN32
#define _pi_mm_getcsr _mm_getcsr
#else
#define _pi_mm_getcsr() _mm_getcsr()
#endif
#ifdef WIN32
#define _pi_mm_hadd_epi16 _mm_hadd_epi16
#else
#define _pi_mm_hadd_epi16(a, b)                                                \
    from_native_obj(_mm_hadd_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hadd_epi32 _mm_hadd_epi32
#else
#define _pi_mm_hadd_epi32(a, b)                                                \
    from_native_obj(_mm_hadd_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hadd_pd _mm_hadd_pd
#else
#define _pi_mm_hadd_pd(a, b)                                                   \
    from_native_obj(_mm_hadd_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hadd_pi16 _mm_hadd_pi16
#else
#define _pi_mm_hadd_pi16(a, b)                                                 \
    from_native_obj(_mm_hadd_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hadd_pi32 _mm_hadd_pi32
#else
#define _pi_mm_hadd_pi32(a, b)                                                 \
    from_native_obj(_mm_hadd_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hadd_ps _mm_hadd_ps
#else
#define _pi_mm_hadd_ps(a, b)                                                   \
    from_native_obj(_mm_hadd_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hadds_epi16 _mm_hadds_epi16
#else
#define _pi_mm_hadds_epi16(a, b)                                               \
    from_native_obj(_mm_hadds_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hadds_pi16 _mm_hadds_pi16
#else
#define _pi_mm_hadds_pi16(a, b)                                                \
    from_native_obj(_mm_hadds_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hsub_epi16 _mm_hsub_epi16
#else
#define _pi_mm_hsub_epi16(a, b)                                                \
    from_native_obj(_mm_hsub_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hsub_epi32 _mm_hsub_epi32
#else
#define _pi_mm_hsub_epi32(a, b)                                                \
    from_native_obj(_mm_hsub_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hsub_pd _mm_hsub_pd
#else
#define _pi_mm_hsub_pd(a, b)                                                   \
    from_native_obj(_mm_hsub_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hsub_pi16 _mm_hsub_pi16
#else
#define _pi_mm_hsub_pi16(a, b)                                                 \
    from_native_obj(_mm_hsub_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hsub_pi32 _mm_hsub_pi32
#else
#define _pi_mm_hsub_pi32(a, b)                                                 \
    from_native_obj(_mm_hsub_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hsub_ps _mm_hsub_ps
#else
#define _pi_mm_hsub_ps(a, b)                                                   \
    from_native_obj(_mm_hsub_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hsubs_epi16 _mm_hsubs_epi16
#else
#define _pi_mm_hsubs_epi16(a, b)                                               \
    from_native_obj(_mm_hsubs_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_hsubs_pi16 _mm_hsubs_pi16
#else
#define _pi_mm_hsubs_pi16(a, b)                                                \
    from_native_obj(_mm_hsubs_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_insert_epi16 _mm_insert_epi16
#else
#define _pi_mm_insert_epi16(a, i, imm8)                                        \
    from_native_obj(_mm_insert_epi16((a).native_obj, i, imm8))
#endif
#ifdef WIN32
#define _pi_mm_insert_epi32 _mm_insert_epi32
#else
#define _pi_mm_insert_epi32(a, i, imm8)                                        \
    from_native_obj(_mm_insert_epi32((a).native_obj, i, imm8))
#endif
#ifdef WIN32
#define _pi_mm_insert_epi64 _mm_insert_epi64
#else
#define _pi_mm_insert_epi64(a, i, imm8)                                        \
    from_native_obj(_mm_insert_epi64((a).native_obj, i, imm8))
#endif
#ifdef WIN32
#define _pi_mm_insert_epi8 _mm_insert_epi8
#else
#define _pi_mm_insert_epi8(a, i, imm8)                                         \
    from_native_obj(_mm_insert_epi8((a).native_obj, i, imm8))
#endif
#ifdef WIN32
#define _pi_mm_insert_pi16 _mm_insert_pi16
#else
#define _pi_mm_insert_pi16(a, i, imm8)                                         \
    from_native_obj(_mm_insert_pi16((a).native_obj, i, imm8))
#endif
#ifdef WIN32
#define _pi_mm_insert_ps _mm_insert_ps
#else
#define _pi_mm_insert_ps(a, b, imm8)                                           \
    from_native_obj(_mm_insert_ps((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_lddqu_si128 _mm_lddqu_si128
#else
#define _pi_mm_lddqu_si128(mem_addr)                                           \
    from_native_obj(_mm_lddqu_si128(&(mem_addr)->native_obj))
#endif
#ifdef WIN32
#define _pi_mm_lfence _mm_lfence
#else
#define _pi_mm_lfence() _mm_lfence()
#endif
#ifdef WIN32
#define _pi_mm_load_pd _mm_load_pd
#else
#define _pi_mm_load_pd(mem_addr) from_native_obj(_mm_load_pd(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_load_pd1 _mm_load_pd1
#else
#define _pi_mm_load_pd1(mem_addr) from_native_obj(_mm_load_pd1(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_load_ps _mm_load_ps
#else
#define _pi_mm_load_ps(mem_addr) from_native_obj(_mm_load_ps(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_load_ps1 _mm_load_ps1
#else
#define _pi_mm_load_ps1(mem_addr) from_native_obj(_mm_load_ps1(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_load_sd _mm_load_sd
#else
#define _pi_mm_load_sd(mem_addr) from_native_obj(_mm_load_sd(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_load_si128 _mm_load_si128
#else
#define _pi_mm_load_si128(mem_addr)                                            \
    from_native_obj(_mm_load_si128(&(mem_addr)->native_obj))
#endif
#ifdef WIN32
#define _pi_mm_load_ss _mm_load_ss
#else
#define _pi_mm_load_ss(mem_addr) from_native_obj(_mm_load_ss(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_load1_pd _mm_load1_pd
#else
#define _pi_mm_load1_pd(mem_addr) from_native_obj(_mm_load1_pd(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_load1_ps _mm_load1_ps
#else
#define _pi_mm_load1_ps(mem_addr) from_native_obj(_mm_load1_ps(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_loaddup_pd _mm_loaddup_pd
#else
#define _pi_mm_loaddup_pd(mem_addr) from_native_obj(_mm_loaddup_pd(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_loadh_pd _mm_loadh_pd
#else
#define _pi_mm_loadh_pd(a, mem_addr)                                           \
    from_native_obj(_mm_loadh_pd((a).native_obj, mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_loadh_pi _mm_loadh_pi
#else
#define _pi_mm_loadh_pi(a, mem_addr)                                           \
    from_native_obj(_mm_loadh_pi((a).native_obj, &(mem_addr)->native_obj))
#endif
#ifdef WIN32
#define _pi_mm_loadl_epi64 _mm_loadl_epi64
#else
#define _pi_mm_loadl_epi64(mem_addr)                                           \
    from_native_obj(_mm_loadl_epi64(&(mem_addr)->native_obj))
#endif
#ifdef WIN32
#define _pi_mm_loadl_pd _mm_loadl_pd
#else
#define _pi_mm_loadl_pd(a, mem_addr)                                           \
    from_native_obj(_mm_loadl_pd((a).native_obj, mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_loadl_pi _mm_loadl_pi
#else
#define _pi_mm_loadl_pi(a, mem_addr)                                           \
    from_native_obj(_mm_loadl_pi((a).native_obj, &(mem_addr)->native_obj))
#endif
#ifdef WIN32
#define _pi_mm_loadr_pd _mm_loadr_pd
#else
#define _pi_mm_loadr_pd(mem_addr) from_native_obj(_mm_loadr_pd(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_loadr_ps _mm_loadr_ps
#else
#define _pi_mm_loadr_ps(mem_addr) from_native_obj(_mm_loadr_ps(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_loadu_pd _mm_loadu_pd
#else
#define _pi_mm_loadu_pd(mem_addr) from_native_obj(_mm_loadu_pd(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_loadu_ps _mm_loadu_ps
#else
#define _pi_mm_loadu_ps(mem_addr) from_native_obj(_mm_loadu_ps(mem_addr))
#endif
#ifdef WIN32
#define _pi_mm_loadu_si128 _mm_loadu_si128
#else
#define _pi_mm_loadu_si128(mem_addr)                                           \
    from_native_obj(_mm_loadu_si128(&(mem_addr)->native_obj))
#endif
#ifdef WIN32
#define _pi_mm_madd_epi16 _mm_madd_epi16
#else
#define _pi_mm_madd_epi16(a, b)                                                \
    from_native_obj(_mm_madd_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_madd_pi16 _mm_madd_pi16
#else
#define _pi_mm_madd_pi16(a, b)                                                 \
    from_native_obj(_mm_madd_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_maddubs_epi16 _mm_maddubs_epi16
#else
#define _pi_mm_maddubs_epi16(a, b)                                             \
    from_native_obj(_mm_maddubs_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_maddubs_pi16 _mm_maddubs_pi16
#else
#define _pi_mm_maddubs_pi16(a, b)                                              \
    from_native_obj(_mm_maddubs_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_maskmove_si64 _mm_maskmove_si64
#else
#define _pi_mm_maskmove_si64(a, mask, mem_addr)                                \
    _mm_maskmove_si64((a).native_obj, (mask).native_obj, mem_addr)
#endif
#ifdef WIN32
#define _pi_mm_maskmoveu_si128 _mm_maskmoveu_si128
#else
#define _pi_mm_maskmoveu_si128(a, mask, mem_addr)                              \
    _mm_maskmoveu_si128((a).native_obj, (mask).native_obj, mem_addr)
#endif
#ifdef WIN32
#define _pi_m_maskmovq _m_maskmovq
#else
#define _pi_m_maskmovq(a, mask, mem_addr)                                      \
    _m_maskmovq((a).native_obj, (mask).native_obj, mem_addr)
#endif
#ifdef WIN32
#define _pi_mm_max_epi16 _mm_max_epi16
#else
#define _pi_mm_max_epi16(a, b)                                                 \
    from_native_obj(_mm_max_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_epi32 _mm_max_epi32
#else
#define _pi_mm_max_epi32(a, b)                                                 \
    from_native_obj(_mm_max_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_epi8 _mm_max_epi8
#else
#define _pi_mm_max_epi8(a, b)                                                  \
    from_native_obj(_mm_max_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_epu16 _mm_max_epu16
#else
#define _pi_mm_max_epu16(a, b)                                                 \
    from_native_obj(_mm_max_epu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_epu32 _mm_max_epu32
#else
#define _pi_mm_max_epu32(a, b)                                                 \
    from_native_obj(_mm_max_epu32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_epu8 _mm_max_epu8
#else
#define _pi_mm_max_epu8(a, b)                                                  \
    from_native_obj(_mm_max_epu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_pd _mm_max_pd
#else
#define _pi_mm_max_pd(a, b)                                                    \
    from_native_obj(_mm_max_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_pi16 _mm_max_pi16
#else
#define _pi_mm_max_pi16(a, b)                                                  \
    from_native_obj(_mm_max_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_ps _mm_max_ps
#else
#define _pi_mm_max_ps(a, b)                                                    \
    from_native_obj(_mm_max_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_pu8 _mm_max_pu8
#else
#define _pi_mm_max_pu8(a, b)                                                   \
    from_native_obj(_mm_max_pu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_sd _mm_max_sd
#else
#define _pi_mm_max_sd(a, b)                                                    \
    from_native_obj(_mm_max_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_max_ss _mm_max_ss
#else
#define _pi_mm_max_ss(a, b)                                                    \
    from_native_obj(_mm_max_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mfence _mm_mfence
#else
#define _pi_mm_mfence() _mm_mfence()
#endif
#ifdef WIN32
#define _pi_mm_min_epi16 _mm_min_epi16
#else
#define _pi_mm_min_epi16(a, b)                                                 \
    from_native_obj(_mm_min_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_epi32 _mm_min_epi32
#else
#define _pi_mm_min_epi32(a, b)                                                 \
    from_native_obj(_mm_min_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_epi8 _mm_min_epi8
#else
#define _pi_mm_min_epi8(a, b)                                                  \
    from_native_obj(_mm_min_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_epu16 _mm_min_epu16
#else
#define _pi_mm_min_epu16(a, b)                                                 \
    from_native_obj(_mm_min_epu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_epu32 _mm_min_epu32
#else
#define _pi_mm_min_epu32(a, b)                                                 \
    from_native_obj(_mm_min_epu32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_epu8 _mm_min_epu8
#else
#define _pi_mm_min_epu8(a, b)                                                  \
    from_native_obj(_mm_min_epu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_pd _mm_min_pd
#else
#define _pi_mm_min_pd(a, b)                                                    \
    from_native_obj(_mm_min_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_pi16 _mm_min_pi16
#else
#define _pi_mm_min_pi16(a, b)                                                  \
    from_native_obj(_mm_min_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_ps _mm_min_ps
#else
#define _pi_mm_min_ps(a, b)                                                    \
    from_native_obj(_mm_min_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_pu8 _mm_min_pu8
#else
#define _pi_mm_min_pu8(a, b)                                                   \
    from_native_obj(_mm_min_pu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_sd _mm_min_sd
#else
#define _pi_mm_min_sd(a, b)                                                    \
    from_native_obj(_mm_min_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_min_ss _mm_min_ss
#else
#define _pi_mm_min_ss(a, b)                                                    \
    from_native_obj(_mm_min_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_minpos_epu16 _mm_minpos_epu16
#else
#define _pi_mm_minpos_epu16(a) from_native_obj(_mm_minpos_epu16((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_move_epi64 _mm_move_epi64
#else
#define _pi_mm_move_epi64(a) from_native_obj(_mm_move_epi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_move_sd _mm_move_sd
#else
#define _pi_mm_move_sd(a, b)                                                   \
    from_native_obj(_mm_move_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_move_ss _mm_move_ss
#else
#define _pi_mm_move_ss(a, b)                                                   \
    from_native_obj(_mm_move_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_movedup_pd _mm_movedup_pd
#else
#define _pi_mm_movedup_pd(a) from_native_obj(_mm_movedup_pd((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_movehdup_ps _mm_movehdup_ps
#else
#define _pi_mm_movehdup_ps(a) from_native_obj(_mm_movehdup_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_movehl_ps _mm_movehl_ps
#else
#define _pi_mm_movehl_ps(a, b)                                                 \
    from_native_obj(_mm_movehl_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_moveldup_ps _mm_moveldup_ps
#else
#define _pi_mm_moveldup_ps(a) from_native_obj(_mm_moveldup_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_movelh_ps _mm_movelh_ps
#else
#define _pi_mm_movelh_ps(a, b)                                                 \
    from_native_obj(_mm_movelh_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_movemask_epi8 _mm_movemask_epi8
#else
#define _pi_mm_movemask_epi8(a) _mm_movemask_epi8((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_movemask_pd _mm_movemask_pd
#else
#define _pi_mm_movemask_pd(a) _mm_movemask_pd((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_movemask_pi8 _mm_movemask_pi8
#else
#define _pi_mm_movemask_pi8(a) _mm_movemask_pi8((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_movemask_ps _mm_movemask_ps
#else
#define _pi_mm_movemask_ps(a) _mm_movemask_ps((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_movepi64_pi64 _mm_movepi64_pi64
#else
#define _pi_mm_movepi64_pi64(a)                                                \
    from_native_obj(_mm_movepi64_pi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_movpi64_epi64 _mm_movpi64_epi64
#else
#define _pi_mm_movpi64_epi64(a)                                                \
    from_native_obj(_mm_movpi64_epi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mpsadbw_epu8 _mm_mpsadbw_epu8
#else
#define _pi_mm_mpsadbw_epu8(a, b, imm8)                                        \
    from_native_obj(_mm_mpsadbw_epu8((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_mul_epi32 _mm_mul_epi32
#else
#define _pi_mm_mul_epi32(a, b)                                                 \
    from_native_obj(_mm_mul_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mul_epu32 _mm_mul_epu32
#else
#define _pi_mm_mul_epu32(a, b)                                                 \
    from_native_obj(_mm_mul_epu32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mul_pd _mm_mul_pd
#else
#define _pi_mm_mul_pd(a, b)                                                    \
    from_native_obj(_mm_mul_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mul_ps _mm_mul_ps
#else
#define _pi_mm_mul_ps(a, b)                                                    \
    from_native_obj(_mm_mul_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mul_sd _mm_mul_sd
#else
#define _pi_mm_mul_sd(a, b)                                                    \
    from_native_obj(_mm_mul_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mul_ss _mm_mul_ss
#else
#define _pi_mm_mul_ss(a, b)                                                    \
    from_native_obj(_mm_mul_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mul_su32 _mm_mul_su32
#else
#define _pi_mm_mul_su32(a, b)                                                  \
    from_native_obj(_mm_mul_su32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mulhi_epi16 _mm_mulhi_epi16
#else
#define _pi_mm_mulhi_epi16(a, b)                                               \
    from_native_obj(_mm_mulhi_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mulhi_epu16 _mm_mulhi_epu16
#else
#define _pi_mm_mulhi_epu16(a, b)                                               \
    from_native_obj(_mm_mulhi_epu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mulhi_pi16 _mm_mulhi_pi16
#else
#define _pi_mm_mulhi_pi16(a, b)                                                \
    from_native_obj(_mm_mulhi_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mulhi_pu16 _mm_mulhi_pu16
#else
#define _pi_mm_mulhi_pu16(a, b)                                                \
    from_native_obj(_mm_mulhi_pu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mulhrs_epi16 _mm_mulhrs_epi16
#else
#define _pi_mm_mulhrs_epi16(a, b)                                              \
    from_native_obj(_mm_mulhrs_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mulhrs_pi16 _mm_mulhrs_pi16
#else
#define _pi_mm_mulhrs_pi16(a, b)                                               \
    from_native_obj(_mm_mulhrs_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mullo_epi16 _mm_mullo_epi16
#else
#define _pi_mm_mullo_epi16(a, b)                                               \
    from_native_obj(_mm_mullo_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mullo_epi32 _mm_mullo_epi32
#else
#define _pi_mm_mullo_epi32(a, b)                                               \
    from_native_obj(_mm_mullo_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_mullo_pi16 _mm_mullo_pi16
#else
#define _pi_mm_mullo_pi16(a, b)                                                \
    from_native_obj(_mm_mullo_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_or_pd _mm_or_pd
#else
#define _pi_mm_or_pd(a, b)                                                     \
    from_native_obj(_mm_or_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_or_ps _mm_or_ps
#else
#define _pi_mm_or_ps(a, b)                                                     \
    from_native_obj(_mm_or_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_or_si128 _mm_or_si128
#else
#define _pi_mm_or_si128(a, b)                                                  \
    from_native_obj(_mm_or_si128((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_or_si64 _mm_or_si64
#else
#define _pi_mm_or_si64(a, b)                                                   \
    from_native_obj(_mm_or_si64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_packs_epi16 _mm_packs_epi16
#else
#define _pi_mm_packs_epi16(a, b)                                               \
    from_native_obj(_mm_packs_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_packs_epi32 _mm_packs_epi32
#else
#define _pi_mm_packs_epi32(a, b)                                               \
    from_native_obj(_mm_packs_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_packs_pi16 _mm_packs_pi16
#else
#define _pi_mm_packs_pi16(a, b)                                                \
    from_native_obj(_mm_packs_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_packs_pi32 _mm_packs_pi32
#else
#define _pi_mm_packs_pi32(a, b)                                                \
    from_native_obj(_mm_packs_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_packs_pu16 _mm_packs_pu16
#else
#define _pi_mm_packs_pu16(a, b)                                                \
    from_native_obj(_mm_packs_pu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_packssdw _m_packssdw
#else
#define _pi_m_packssdw(a, b)                                                   \
    from_native_obj(_m_packssdw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_packsswb _m_packsswb
#else
#define _pi_m_packsswb(a, b)                                                   \
    from_native_obj(_m_packsswb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_packus_epi16 _mm_packus_epi16
#else
#define _pi_mm_packus_epi16(a, b)                                              \
    from_native_obj(_mm_packus_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_packus_epi32 _mm_packus_epi32
#else
#define _pi_mm_packus_epi32(a, b)                                              \
    from_native_obj(_mm_packus_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_packuswb _m_packuswb
#else
#define _pi_m_packuswb(a, b)                                                   \
    from_native_obj(_m_packuswb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_paddb _m_paddb
#else
#define _pi_m_paddb(a, b)                                                      \
    from_native_obj(_m_paddb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_paddd _m_paddd
#else
#define _pi_m_paddd(a, b)                                                      \
    from_native_obj(_m_paddd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_paddsb _m_paddsb
#else
#define _pi_m_paddsb(a, b)                                                     \
    from_native_obj(_m_paddsb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_paddsw _m_paddsw
#else
#define _pi_m_paddsw(a, b)                                                     \
    from_native_obj(_m_paddsw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_paddusb _m_paddusb
#else
#define _pi_m_paddusb(a, b)                                                    \
    from_native_obj(_m_paddusb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_paddusw _m_paddusw
#else
#define _pi_m_paddusw(a, b)                                                    \
    from_native_obj(_m_paddusw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_paddw _m_paddw
#else
#define _pi_m_paddw(a, b)                                                      \
    from_native_obj(_m_paddw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pand _m_pand
#else
#define _pi_m_pand(a, b)                                                       \
    from_native_obj(_m_pand((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pandn _m_pandn
#else
#define _pi_m_pandn(a, b)                                                      \
    from_native_obj(_m_pandn((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_pause _mm_pause
#else
#define _pi_mm_pause() _mm_pause()
#endif
#ifdef WIN32
#define _pi_m_pavgb _m_pavgb
#else
#define _pi_m_pavgb(a, b)                                                      \
    from_native_obj(_m_pavgb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pavgw _m_pavgw
#else
#define _pi_m_pavgw(a, b)                                                      \
    from_native_obj(_m_pavgw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pcmpeqb _m_pcmpeqb
#else
#define _pi_m_pcmpeqb(a, b)                                                    \
    from_native_obj(_m_pcmpeqb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pcmpeqd _m_pcmpeqd
#else
#define _pi_m_pcmpeqd(a, b)                                                    \
    from_native_obj(_m_pcmpeqd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pcmpeqw _m_pcmpeqw
#else
#define _pi_m_pcmpeqw(a, b)                                                    \
    from_native_obj(_m_pcmpeqw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pcmpgtb _m_pcmpgtb
#else
#define _pi_m_pcmpgtb(a, b)                                                    \
    from_native_obj(_m_pcmpgtb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pcmpgtd _m_pcmpgtd
#else
#define _pi_m_pcmpgtd(a, b)                                                    \
    from_native_obj(_m_pcmpgtd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pcmpgtw _m_pcmpgtw
#else
#define _pi_m_pcmpgtw(a, b)                                                    \
    from_native_obj(_m_pcmpgtw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pextrw _m_pextrw
#else
#define _pi_m_pextrw(a, imm8) _m_pextrw((a).native_obj, imm8)
#endif
#ifdef WIN32
#define _pi_m_pinsrw _m_pinsrw
#else
#define _pi_m_pinsrw(a, i, imm8)                                               \
    from_native_obj(_m_pinsrw((a).native_obj, i, imm8))
#endif
#ifdef WIN32
#define _pi_m_pmaddwd _m_pmaddwd
#else
#define _pi_m_pmaddwd(a, b)                                                    \
    from_native_obj(_m_pmaddwd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pmaxsw _m_pmaxsw
#else
#define _pi_m_pmaxsw(a, b)                                                     \
    from_native_obj(_m_pmaxsw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pmaxub _m_pmaxub
#else
#define _pi_m_pmaxub(a, b)                                                     \
    from_native_obj(_m_pmaxub((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pminsw _m_pminsw
#else
#define _pi_m_pminsw(a, b)                                                     \
    from_native_obj(_m_pminsw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pminub _m_pminub
#else
#define _pi_m_pminub(a, b)                                                     \
    from_native_obj(_m_pminub((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pmovmskb _m_pmovmskb
#else
#define _pi_m_pmovmskb(a) _m_pmovmskb((a).native_obj)
#endif
#ifdef WIN32
#define _pi_m_pmulhuw _m_pmulhuw
#else
#define _pi_m_pmulhuw(a, b)                                                    \
    from_native_obj(_m_pmulhuw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pmulhw _m_pmulhw
#else
#define _pi_m_pmulhw(a, b)                                                     \
    from_native_obj(_m_pmulhw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pmullw _m_pmullw
#else
#define _pi_m_pmullw(a, b)                                                     \
    from_native_obj(_m_pmullw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_por _m_por
#else
#define _pi_m_por(a, b) from_native_obj(_m_por((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_prefetch _mm_prefetch
#else
#define _pi_mm_prefetch(p, i) _mm_prefetch(p, i)
#endif
#ifdef WIN32
#define _pi_m_psadbw _m_psadbw
#else
#define _pi_m_psadbw(a, b)                                                     \
    from_native_obj(_m_psadbw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pshufw _m_pshufw
#else
#define _pi_m_pshufw(a, imm8) from_native_obj(_m_pshufw((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_pslld _m_pslld
#else
#define _pi_m_pslld(a, count)                                                  \
    from_native_obj(_m_pslld((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pslldi _m_pslldi
#else
#define _pi_m_pslldi(a, imm8) from_native_obj(_m_pslldi((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_psllq _m_psllq
#else
#define _pi_m_psllq(a, count)                                                  \
    from_native_obj(_m_psllq((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psllqi _m_psllqi
#else
#define _pi_m_psllqi(a, imm8) from_native_obj(_m_psllqi((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_psllw _m_psllw
#else
#define _pi_m_psllw(a, count)                                                  \
    from_native_obj(_m_psllw((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psllwi _m_psllwi
#else
#define _pi_m_psllwi(a, imm8) from_native_obj(_m_psllwi((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_psrad _m_psrad
#else
#define _pi_m_psrad(a, count)                                                  \
    from_native_obj(_m_psrad((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psradi _m_psradi
#else
#define _pi_m_psradi(a, imm8) from_native_obj(_m_psradi((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_psraw _m_psraw
#else
#define _pi_m_psraw(a, count)                                                  \
    from_native_obj(_m_psraw((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psrawi _m_psrawi
#else
#define _pi_m_psrawi(a, imm8) from_native_obj(_m_psrawi((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_psrld _m_psrld
#else
#define _pi_m_psrld(a, count)                                                  \
    from_native_obj(_m_psrld((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psrldi _m_psrldi
#else
#define _pi_m_psrldi(a, imm8) from_native_obj(_m_psrldi((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_psrlq _m_psrlq
#else
#define _pi_m_psrlq(a, count)                                                  \
    from_native_obj(_m_psrlq((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psrlqi _m_psrlqi
#else
#define _pi_m_psrlqi(a, imm8) from_native_obj(_m_psrlqi((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_psrlw _m_psrlw
#else
#define _pi_m_psrlw(a, count)                                                  \
    from_native_obj(_m_psrlw((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psrlwi _m_psrlwi
#else
#define _pi_m_psrlwi(a, imm8) from_native_obj(_m_psrlwi((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_m_psubb _m_psubb
#else
#define _pi_m_psubb(a, b)                                                      \
    from_native_obj(_m_psubb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psubd _m_psubd
#else
#define _pi_m_psubd(a, b)                                                      \
    from_native_obj(_m_psubd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psubsb _m_psubsb
#else
#define _pi_m_psubsb(a, b)                                                     \
    from_native_obj(_m_psubsb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psubsw _m_psubsw
#else
#define _pi_m_psubsw(a, b)                                                     \
    from_native_obj(_m_psubsw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psubusb _m_psubusb
#else
#define _pi_m_psubusb(a, b)                                                    \
    from_native_obj(_m_psubusb((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psubusw _m_psubusw
#else
#define _pi_m_psubusw(a, b)                                                    \
    from_native_obj(_m_psubusw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_psubw _m_psubw
#else
#define _pi_m_psubw(a, b)                                                      \
    from_native_obj(_m_psubw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_punpckhbw _m_punpckhbw
#else
#define _pi_m_punpckhbw(a, b)                                                  \
    from_native_obj(_m_punpckhbw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_punpckhdq _m_punpckhdq
#else
#define _pi_m_punpckhdq(a, b)                                                  \
    from_native_obj(_m_punpckhdq((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_punpckhwd _m_punpckhwd
#else
#define _pi_m_punpckhwd(a, b)                                                  \
    from_native_obj(_m_punpckhwd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_punpcklbw _m_punpcklbw
#else
#define _pi_m_punpcklbw(a, b)                                                  \
    from_native_obj(_m_punpcklbw((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_punpckldq _m_punpckldq
#else
#define _pi_m_punpckldq(a, b)                                                  \
    from_native_obj(_m_punpckldq((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_punpcklwd _m_punpcklwd
#else
#define _pi_m_punpcklwd(a, b)                                                  \
    from_native_obj(_m_punpcklwd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_m_pxor _m_pxor
#else
#define _pi_m_pxor(a, b)                                                       \
    from_native_obj(_m_pxor((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_rcp_ps _mm_rcp_ps
#else
#define _pi_mm_rcp_ps(a) from_native_obj(_mm_rcp_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_rcp_ss _mm_rcp_ss
#else
#define _pi_mm_rcp_ss(a) from_native_obj(_mm_rcp_ss((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_round_pd _mm_round_pd
#else
#define _pi_mm_round_pd(a, rounding)                                           \
    from_native_obj(_mm_round_pd((a).native_obj, rounding))
#endif
#ifdef WIN32
#define _pi_mm_round_ps _mm_round_ps
#else
#define _pi_mm_round_ps(a, rounding)                                           \
    from_native_obj(_mm_round_ps((a).native_obj, rounding))
#endif
#ifdef WIN32
#define _pi_mm_round_sd _mm_round_sd
#else
#define _pi_mm_round_sd(a, b, rounding)                                        \
    from_native_obj(_mm_round_sd((a).native_obj, (b).native_obj, rounding))
#endif
#ifdef WIN32
#define _pi_mm_round_ss _mm_round_ss
#else
#define _pi_mm_round_ss(a, b, rounding)                                        \
    from_native_obj(_mm_round_ss((a).native_obj, (b).native_obj, rounding))
#endif
#ifdef WIN32
#define _pi_mm_rsqrt_ps _mm_rsqrt_ps
#else
#define _pi_mm_rsqrt_ps(a) from_native_obj(_mm_rsqrt_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_rsqrt_ss _mm_rsqrt_ss
#else
#define _pi_mm_rsqrt_ss(a) from_native_obj(_mm_rsqrt_ss((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sad_epu8 _mm_sad_epu8
#else
#define _pi_mm_sad_epu8(a, b)                                                  \
    from_native_obj(_mm_sad_epu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sad_pu8 _mm_sad_pu8
#else
#define _pi_mm_sad_pu8(a, b)                                                   \
    from_native_obj(_mm_sad_pu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_set_epi16 _mm_set_epi16
#else
#define _pi_mm_set_epi16(e7, e6, e5, e4, e3, e2, e1, e0)                       \
    from_native_obj(_mm_set_epi16(e7, e6, e5, e4, e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_set_epi32 _mm_set_epi32
#else
#define _pi_mm_set_epi32(e3, e2, e1, e0)                                       \
    from_native_obj(_mm_set_epi32(e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_set_epi64 _mm_set_epi64
#else
#define _pi_mm_set_epi64(e1, e0)                                               \
    from_native_obj(_mm_set_epi64((e1).native_obj, (e0).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_set_epi64x _mm_set_epi64x
#else
#define _pi_mm_set_epi64x(e1, e0) from_native_obj(_mm_set_epi64x(e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_set_epi8 _mm_set_epi8
#else
#define _pi_mm_set_epi8(e15, e14, e13, e12, e11, e10, e9, e8, e7, e6, e5, e4,  \
                        e3, e2, e1, e0)                                        \
    from_native_obj(_mm_set_epi8(e15, e14, e13, e12, e11, e10, e9, e8, e7, e6, \
                                 e5, e4, e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_set_pd _mm_set_pd
#else
#define _pi_mm_set_pd(e1, e0) from_native_obj(_mm_set_pd(e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_set_pd1 _mm_set_pd1
#else
#define _pi_mm_set_pd1(a) from_native_obj(_mm_set_pd1(a))
#endif
#ifdef WIN32
#define _pi_mm_set_pi16 _mm_set_pi16
#else
#define _pi_mm_set_pi16(e3, e2, e1, e0)                                        \
    from_native_obj(_mm_set_pi16(e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_set_pi32 _mm_set_pi32
#else
#define _pi_mm_set_pi32(e1, e0) from_native_obj(_mm_set_pi32(e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_set_pi8 _mm_set_pi8
#else
#define _pi_mm_set_pi8(e7, e6, e5, e4, e3, e2, e1, e0)                         \
    from_native_obj(_mm_set_pi8(e7, e6, e5, e4, e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_set_ps _mm_set_ps
#else
#define _pi_mm_set_ps(e3, e2, e1, e0)                                          \
    from_native_obj(_mm_set_ps(e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_set_ps1 _mm_set_ps1
#else
#define _pi_mm_set_ps1(a) from_native_obj(_mm_set_ps1(a))
#endif
#ifdef WIN32
#define _pi_mm_set_sd _mm_set_sd
#else
#define _pi_mm_set_sd(a) from_native_obj(_mm_set_sd(a))
#endif
#ifdef WIN32
#define _pi_mm_set_ss _mm_set_ss
#else
#define _pi_mm_set_ss(a) from_native_obj(_mm_set_ss(a))
#endif
#ifdef WIN32
#define _pi_mm_set1_epi16 _mm_set1_epi16
#else
#define _pi_mm_set1_epi16(a) from_native_obj(_mm_set1_epi16(a))
#endif
#ifdef WIN32
#define _pi_mm_set1_epi32 _mm_set1_epi32
#else
#define _pi_mm_set1_epi32(a) from_native_obj(_mm_set1_epi32(a))
#endif
#ifdef WIN32
#define _pi_mm_set1_epi64 _mm_set1_epi64
#else
#define _pi_mm_set1_epi64(a) from_native_obj(_mm_set1_epi64((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_set1_epi64x _mm_set1_epi64x
#else
#define _pi_mm_set1_epi64x(a) from_native_obj(_mm_set1_epi64x(a))
#endif
#ifdef WIN32
#define _pi_mm_set1_epi8 _mm_set1_epi8
#else
#define _pi_mm_set1_epi8(a) from_native_obj(_mm_set1_epi8(a))
#endif
#ifdef WIN32
#define _pi_mm_set1_pd _mm_set1_pd
#else
#define _pi_mm_set1_pd(a) from_native_obj(_mm_set1_pd(a))
#endif
#ifdef WIN32
#define _pi_mm_set1_pi16 _mm_set1_pi16
#else
#define _pi_mm_set1_pi16(a) from_native_obj(_mm_set1_pi16(a))
#endif
#ifdef WIN32
#define _pi_mm_set1_pi32 _mm_set1_pi32
#else
#define _pi_mm_set1_pi32(a) from_native_obj(_mm_set1_pi32(a))
#endif
#ifdef WIN32
#define _pi_mm_set1_pi8 _mm_set1_pi8
#else
#define _pi_mm_set1_pi8(a) from_native_obj(_mm_set1_pi8(a))
#endif
#ifdef WIN32
#define _pi_mm_set1_ps _mm_set1_ps
#else
#define _pi_mm_set1_ps(a) from_native_obj(_mm_set1_ps(a))
#endif
#ifdef WIN32
#define _pi_mm_setcsr _mm_setcsr
#else
#define _pi_mm_setcsr(a) _mm_setcsr(a)
#endif
#ifdef WIN32
#define _pi_mm_setr_epi16 _mm_setr_epi16
#else
#define _pi_mm_setr_epi16(e7, e6, e5, e4, e3, e2, e1, e0)                      \
    from_native_obj(_mm_setr_epi16(e7, e6, e5, e4, e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_setr_epi32 _mm_setr_epi32
#else
#define _pi_mm_setr_epi32(e3, e2, e1, e0)                                      \
    from_native_obj(_mm_setr_epi32(e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_setr_epi64 _mm_setr_epi64
#else
#define _pi_mm_setr_epi64(e1, e0)                                              \
    from_native_obj(_mm_setr_epi64((e1).native_obj, (e0).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_setr_epi8 _mm_setr_epi8
#else
#define _pi_mm_setr_epi8(e15, e14, e13, e12, e11, e10, e9, e8, e7, e6, e5, e4, \
                         e3, e2, e1, e0)                                       \
    from_native_obj(_mm_setr_epi8(e15, e14, e13, e12, e11, e10, e9, e8, e7,    \
                                  e6, e5, e4, e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_setr_pd _mm_setr_pd
#else
#define _pi_mm_setr_pd(e1, e0) from_native_obj(_mm_setr_pd(e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_setr_pi16 _mm_setr_pi16
#else
#define _pi_mm_setr_pi16(e3, e2, e1, e0)                                       \
    from_native_obj(_mm_setr_pi16(e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_setr_pi32 _mm_setr_pi32
#else
#define _pi_mm_setr_pi32(e1, e0) from_native_obj(_mm_setr_pi32(e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_setr_pi8 _mm_setr_pi8
#else
#define _pi_mm_setr_pi8(e7, e6, e5, e4, e3, e2, e1, e0)                        \
    from_native_obj(_mm_setr_pi8(e7, e6, e5, e4, e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_setr_ps _mm_setr_ps
#else
#define _pi_mm_setr_ps(e3, e2, e1, e0)                                         \
    from_native_obj(_mm_setr_ps(e3, e2, e1, e0))
#endif
#ifdef WIN32
#define _pi_mm_setzero_pd _mm_setzero_pd
#else
#define _pi_mm_setzero_pd() from_native_obj(_mm_setzero_pd())
#endif
#ifdef WIN32
#define _pi_mm_setzero_ps _mm_setzero_ps
#else
#define _pi_mm_setzero_ps() from_native_obj(_mm_setzero_ps())
#endif
#ifdef WIN32
#define _pi_mm_setzero_si128 _mm_setzero_si128
#else
#define _pi_mm_setzero_si128() from_native_obj(_mm_setzero_si128())
#endif
#ifdef WIN32
#define _pi_mm_setzero_si64 _mm_setzero_si64
#else
#define _pi_mm_setzero_si64() from_native_obj(_mm_setzero_si64())
#endif
#ifdef WIN32
#define _pi_mm_sfence _mm_sfence
#else
#define _pi_mm_sfence() _mm_sfence()
#endif
#ifdef WIN32
#define _pi_mm_shuffle_epi32 _mm_shuffle_epi32
#else
#define _pi_mm_shuffle_epi32(a, imm8)                                          \
    from_native_obj(_mm_shuffle_epi32((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_shuffle_epi8 _mm_shuffle_epi8
#else
#define _pi_mm_shuffle_epi8(a, b)                                              \
    from_native_obj(_mm_shuffle_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_shuffle_pd _mm_shuffle_pd
#else
#define _pi_mm_shuffle_pd(a, b, imm8)                                          \
    from_native_obj(_mm_shuffle_pd((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_shuffle_pi16 _mm_shuffle_pi16
#else
#define _pi_mm_shuffle_pi16(a, imm8)                                           \
    from_native_obj(_mm_shuffle_pi16((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_shuffle_pi8 _mm_shuffle_pi8
#else
#define _pi_mm_shuffle_pi8(a, b)                                               \
    from_native_obj(_mm_shuffle_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_shuffle_ps _mm_shuffle_ps
#else
#define _pi_mm_shuffle_ps(a, b, imm8)                                          \
    from_native_obj(_mm_shuffle_ps((a).native_obj, (b).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_shufflehi_epi16 _mm_shufflehi_epi16
#else
#define _pi_mm_shufflehi_epi16(a, imm8)                                        \
    from_native_obj(_mm_shufflehi_epi16((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_shufflelo_epi16 _mm_shufflelo_epi16
#else
#define _pi_mm_shufflelo_epi16(a, imm8)                                        \
    from_native_obj(_mm_shufflelo_epi16((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_sign_epi16 _mm_sign_epi16
#else
#define _pi_mm_sign_epi16(a, b)                                                \
    from_native_obj(_mm_sign_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sign_epi32 _mm_sign_epi32
#else
#define _pi_mm_sign_epi32(a, b)                                                \
    from_native_obj(_mm_sign_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sign_epi8 _mm_sign_epi8
#else
#define _pi_mm_sign_epi8(a, b)                                                 \
    from_native_obj(_mm_sign_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sign_pi16 _mm_sign_pi16
#else
#define _pi_mm_sign_pi16(a, b)                                                 \
    from_native_obj(_mm_sign_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sign_pi32 _mm_sign_pi32
#else
#define _pi_mm_sign_pi32(a, b)                                                 \
    from_native_obj(_mm_sign_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sign_pi8 _mm_sign_pi8
#else
#define _pi_mm_sign_pi8(a, b)                                                  \
    from_native_obj(_mm_sign_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sll_epi16 _mm_sll_epi16
#else
#define _pi_mm_sll_epi16(a, count)                                             \
    from_native_obj(_mm_sll_epi16((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sll_epi32 _mm_sll_epi32
#else
#define _pi_mm_sll_epi32(a, count)                                             \
    from_native_obj(_mm_sll_epi32((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sll_epi64 _mm_sll_epi64
#else
#define _pi_mm_sll_epi64(a, count)                                             \
    from_native_obj(_mm_sll_epi64((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sll_pi16 _mm_sll_pi16
#else
#define _pi_mm_sll_pi16(a, count)                                              \
    from_native_obj(_mm_sll_pi16((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sll_pi32 _mm_sll_pi32
#else
#define _pi_mm_sll_pi32(a, count)                                              \
    from_native_obj(_mm_sll_pi32((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sll_si64 _mm_sll_si64
#else
#define _pi_mm_sll_si64(a, count)                                              \
    from_native_obj(_mm_sll_si64((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_slli_epi16 _mm_slli_epi16
#else
#define _pi_mm_slli_epi16(a, imm8)                                             \
    from_native_obj(_mm_slli_epi16((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_slli_epi32 _mm_slli_epi32
#else
#define _pi_mm_slli_epi32(a, imm8)                                             \
    from_native_obj(_mm_slli_epi32((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_slli_epi64 _mm_slli_epi64
#else
#define _pi_mm_slli_epi64(a, imm8)                                             \
    from_native_obj(_mm_slli_epi64((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_slli_pi16 _mm_slli_pi16
#else
#define _pi_mm_slli_pi16(a, imm8)                                              \
    from_native_obj(_mm_slli_pi16((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_slli_pi32 _mm_slli_pi32
#else
#define _pi_mm_slli_pi32(a, imm8)                                              \
    from_native_obj(_mm_slli_pi32((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_slli_si128 _mm_slli_si128
#else
#define _pi_mm_slli_si128(a, imm8)                                             \
    from_native_obj(_mm_slli_si128((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_slli_si64 _mm_slli_si64
#else
#define _pi_mm_slli_si64(a, imm8)                                              \
    from_native_obj(_mm_slli_si64((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_sqrt_pd _mm_sqrt_pd
#else
#define _pi_mm_sqrt_pd(a) from_native_obj(_mm_sqrt_pd((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sqrt_ps _mm_sqrt_ps
#else
#define _pi_mm_sqrt_ps(a) from_native_obj(_mm_sqrt_ps((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sqrt_sd _mm_sqrt_sd
#else
#define _pi_mm_sqrt_sd(a, b)                                                   \
    from_native_obj(_mm_sqrt_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sqrt_ss _mm_sqrt_ss
#else
#define _pi_mm_sqrt_ss(a) from_native_obj(_mm_sqrt_ss((a).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sra_epi16 _mm_sra_epi16
#else
#define _pi_mm_sra_epi16(a, count)                                             \
    from_native_obj(_mm_sra_epi16((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sra_epi32 _mm_sra_epi32
#else
#define _pi_mm_sra_epi32(a, count)                                             \
    from_native_obj(_mm_sra_epi32((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sra_pi16 _mm_sra_pi16
#else
#define _pi_mm_sra_pi16(a, count)                                              \
    from_native_obj(_mm_sra_pi16((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sra_pi32 _mm_sra_pi32
#else
#define _pi_mm_sra_pi32(a, count)                                              \
    from_native_obj(_mm_sra_pi32((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_srai_epi16 _mm_srai_epi16
#else
#define _pi_mm_srai_epi16(a, imm8)                                             \
    from_native_obj(_mm_srai_epi16((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srai_epi32 _mm_srai_epi32
#else
#define _pi_mm_srai_epi32(a, imm8)                                             \
    from_native_obj(_mm_srai_epi32((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srai_pi16 _mm_srai_pi16
#else
#define _pi_mm_srai_pi16(a, imm8)                                              \
    from_native_obj(_mm_srai_pi16((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srai_pi32 _mm_srai_pi32
#else
#define _pi_mm_srai_pi32(a, imm8)                                              \
    from_native_obj(_mm_srai_pi32((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srl_epi16 _mm_srl_epi16
#else
#define _pi_mm_srl_epi16(a, count)                                             \
    from_native_obj(_mm_srl_epi16((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_srl_epi32 _mm_srl_epi32
#else
#define _pi_mm_srl_epi32(a, count)                                             \
    from_native_obj(_mm_srl_epi32((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_srl_epi64 _mm_srl_epi64
#else
#define _pi_mm_srl_epi64(a, count)                                             \
    from_native_obj(_mm_srl_epi64((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_srl_pi16 _mm_srl_pi16
#else
#define _pi_mm_srl_pi16(a, count)                                              \
    from_native_obj(_mm_srl_pi16((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_srl_pi32 _mm_srl_pi32
#else
#define _pi_mm_srl_pi32(a, count)                                              \
    from_native_obj(_mm_srl_pi32((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_srl_si64 _mm_srl_si64
#else
#define _pi_mm_srl_si64(a, count)                                              \
    from_native_obj(_mm_srl_si64((a).native_obj, (count).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_srli_epi16 _mm_srli_epi16
#else
#define _pi_mm_srli_epi16(a, imm8)                                             \
    from_native_obj(_mm_srli_epi16((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srli_epi32 _mm_srli_epi32
#else
#define _pi_mm_srli_epi32(a, imm8)                                             \
    from_native_obj(_mm_srli_epi32((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srli_epi64 _mm_srli_epi64
#else
#define _pi_mm_srli_epi64(a, imm8)                                             \
    from_native_obj(_mm_srli_epi64((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srli_pi16 _mm_srli_pi16
#else
#define _pi_mm_srli_pi16(a, imm8)                                              \
    from_native_obj(_mm_srli_pi16((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srli_pi32 _mm_srli_pi32
#else
#define _pi_mm_srli_pi32(a, imm8)                                              \
    from_native_obj(_mm_srli_pi32((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srli_si128 _mm_srli_si128
#else
#define _pi_mm_srli_si128(a, imm8)                                             \
    from_native_obj(_mm_srli_si128((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_srli_si64 _mm_srli_si64
#else
#define _pi_mm_srli_si64(a, imm8)                                              \
    from_native_obj(_mm_srli_si64((a).native_obj, imm8))
#endif
#ifdef WIN32
#define _pi_mm_store_pd _mm_store_pd
#else
#define _pi_mm_store_pd(mem_addr, a) _mm_store_pd(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_store_pd1 _mm_store_pd1
#else
#define _pi_mm_store_pd1(mem_addr, a) _mm_store_pd1(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_store_ps _mm_store_ps
#else
#define _pi_mm_store_ps(mem_addr, a) _mm_store_ps(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_store_ps1 _mm_store_ps1
#else
#define _pi_mm_store_ps1(mem_addr, a) _mm_store_ps1(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_store_sd _mm_store_sd
#else
#define _pi_mm_store_sd(mem_addr, a) _mm_store_sd(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_store_si128 _mm_store_si128
#else
#define _pi_mm_store_si128(mem_addr, a)                                        \
    _mm_store_si128(&(mem_addr)->native_obj, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_store_ss _mm_store_ss
#else
#define _pi_mm_store_ss(mem_addr, a) _mm_store_ss(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_store1_pd _mm_store1_pd
#else
#define _pi_mm_store1_pd(mem_addr, a) _mm_store1_pd(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_store1_ps _mm_store1_ps
#else
#define _pi_mm_store1_ps(mem_addr, a) _mm_store1_ps(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storeh_pd _mm_storeh_pd
#else
#define _pi_mm_storeh_pd(mem_addr, a) _mm_storeh_pd(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storeh_pi _mm_storeh_pi
#else
#define _pi_mm_storeh_pi(mem_addr, a)                                          \
    _mm_storeh_pi(&(mem_addr)->native_obj, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storel_epi64 _mm_storel_epi64
#else
#define _pi_mm_storel_epi64(mem_addr, a)                                       \
    _mm_storel_epi64(&(mem_addr)->native_obj, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storel_pd _mm_storel_pd
#else
#define _pi_mm_storel_pd(mem_addr, a) _mm_storel_pd(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storel_pi _mm_storel_pi
#else
#define _pi_mm_storel_pi(mem_addr, a)                                          \
    _mm_storel_pi(&(mem_addr)->native_obj, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storer_pd _mm_storer_pd
#else
#define _pi_mm_storer_pd(mem_addr, a) _mm_storer_pd(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storer_ps _mm_storer_ps
#else
#define _pi_mm_storer_ps(mem_addr, a) _mm_storer_ps(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storeu_pd _mm_storeu_pd
#else
#define _pi_mm_storeu_pd(mem_addr, a) _mm_storeu_pd(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storeu_ps _mm_storeu_ps
#else
#define _pi_mm_storeu_ps(mem_addr, a) _mm_storeu_ps(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_storeu_si128 _mm_storeu_si128
#else
#define _pi_mm_storeu_si128(mem_addr, a)                                       \
    _mm_storeu_si128(&(mem_addr)->native_obj, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_stream_load_si128 _mm_stream_load_si128
#else
#define _pi_mm_stream_load_si128(mem_addr)                                     \
    from_native_obj(_mm_stream_load_si128(&(mem_addr)->native_obj))
#endif
#ifdef WIN32
#define _pi_mm_stream_pd _mm_stream_pd
#else
#define _pi_mm_stream_pd(mem_addr, a) _mm_stream_pd(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_stream_pi _mm_stream_pi
#else
#define _pi_mm_stream_pi(mem_addr, a)                                          \
    _mm_stream_pi(&(mem_addr)->native_obj, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_stream_ps _mm_stream_ps
#else
#define _pi_mm_stream_ps(mem_addr, a) _mm_stream_ps(mem_addr, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_stream_si128 _mm_stream_si128
#else
#define _pi_mm_stream_si128(mem_addr, a)                                       \
    _mm_stream_si128(&(mem_addr)->native_obj, (a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_stream_si32 _mm_stream_si32
#else
#define _pi_mm_stream_si32(mem_addr, a) _mm_stream_si32(mem_addr, a)
#endif
#ifdef WIN32
#define _pi_mm_sub_epi16 _mm_sub_epi16
#else
#define _pi_mm_sub_epi16(a, b)                                                 \
    from_native_obj(_mm_sub_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_epi32 _mm_sub_epi32
#else
#define _pi_mm_sub_epi32(a, b)                                                 \
    from_native_obj(_mm_sub_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_epi64 _mm_sub_epi64
#else
#define _pi_mm_sub_epi64(a, b)                                                 \
    from_native_obj(_mm_sub_epi64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_epi8 _mm_sub_epi8
#else
#define _pi_mm_sub_epi8(a, b)                                                  \
    from_native_obj(_mm_sub_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_pd _mm_sub_pd
#else
#define _pi_mm_sub_pd(a, b)                                                    \
    from_native_obj(_mm_sub_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_pi16 _mm_sub_pi16
#else
#define _pi_mm_sub_pi16(a, b)                                                  \
    from_native_obj(_mm_sub_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_pi32 _mm_sub_pi32
#else
#define _pi_mm_sub_pi32(a, b)                                                  \
    from_native_obj(_mm_sub_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_pi8 _mm_sub_pi8
#else
#define _pi_mm_sub_pi8(a, b)                                                   \
    from_native_obj(_mm_sub_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_ps _mm_sub_ps
#else
#define _pi_mm_sub_ps(a, b)                                                    \
    from_native_obj(_mm_sub_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_sd _mm_sub_sd
#else
#define _pi_mm_sub_sd(a, b)                                                    \
    from_native_obj(_mm_sub_sd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_si64 _mm_sub_si64
#else
#define _pi_mm_sub_si64(a, b)                                                  \
    from_native_obj(_mm_sub_si64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_sub_ss _mm_sub_ss
#else
#define _pi_mm_sub_ss(a, b)                                                    \
    from_native_obj(_mm_sub_ss((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_subs_epi16 _mm_subs_epi16
#else
#define _pi_mm_subs_epi16(a, b)                                                \
    from_native_obj(_mm_subs_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_subs_epi8 _mm_subs_epi8
#else
#define _pi_mm_subs_epi8(a, b)                                                 \
    from_native_obj(_mm_subs_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_subs_epu16 _mm_subs_epu16
#else
#define _pi_mm_subs_epu16(a, b)                                                \
    from_native_obj(_mm_subs_epu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_subs_epu8 _mm_subs_epu8
#else
#define _pi_mm_subs_epu8(a, b)                                                 \
    from_native_obj(_mm_subs_epu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_subs_pi16 _mm_subs_pi16
#else
#define _pi_mm_subs_pi16(a, b)                                                 \
    from_native_obj(_mm_subs_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_subs_pi8 _mm_subs_pi8
#else
#define _pi_mm_subs_pi8(a, b)                                                  \
    from_native_obj(_mm_subs_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_subs_pu16 _mm_subs_pu16
#else
#define _pi_mm_subs_pu16(a, b)                                                 \
    from_native_obj(_mm_subs_pu16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_subs_pu8 _mm_subs_pu8
#else
#define _pi_mm_subs_pu8(a, b)                                                  \
    from_native_obj(_mm_subs_pu8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_test_all_ones _mm_test_all_ones
#else
#define _pi_mm_test_all_ones(a) _mm_test_all_ones((a).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_test_all_zeros _mm_test_all_zeros
#else
#define _pi_mm_test_all_zeros(a, mask)                                         \
    _mm_test_all_zeros((a).native_obj, (mask).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_test_mix_ones_zeros _mm_test_mix_ones_zeros
#else
#define _pi_mm_test_mix_ones_zeros(a, mask)                                    \
    _mm_test_mix_ones_zeros((a).native_obj, (mask).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_testc_si128 _mm_testc_si128
#else
#define _pi_mm_testc_si128(a, b) _mm_testc_si128((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_testnzc_si128 _mm_testnzc_si128
#else
#define _pi_mm_testnzc_si128(a, b)                                             \
    _mm_testnzc_si128((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_testz_si128 _mm_testz_si128
#else
#define _pi_mm_testz_si128(a, b) _mm_testz_si128((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_m_to_int _m_to_int
#else
#define _pi_m_to_int(a) _m_to_int((a).native_obj)
#endif
#ifdef WIN32
#define _pi_m_to_int64 _m_to_int64
#else
#define _pi_m_to_int64(a) _m_to_int64((a).native_obj)
#endif
#ifdef WIN32
#define _pi_MM_TRANSPOSE4_PS _MM_TRANSPOSE4_PS
#else
#define _pi_MM_TRANSPOSE4_PS(row0, row1, row2, row3)                           \
    _MM_TRANSPOSE4_PS((row0).native_obj, (row1).native_obj, (row2).native_obj, \
                      (row3).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomieq_sd _mm_ucomieq_sd
#else
#define _pi_mm_ucomieq_sd(a, b) _mm_ucomieq_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomieq_ss _mm_ucomieq_ss
#else
#define _pi_mm_ucomieq_ss(a, b) _mm_ucomieq_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomige_sd _mm_ucomige_sd
#else
#define _pi_mm_ucomige_sd(a, b) _mm_ucomige_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomige_ss _mm_ucomige_ss
#else
#define _pi_mm_ucomige_ss(a, b) _mm_ucomige_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomigt_sd _mm_ucomigt_sd
#else
#define _pi_mm_ucomigt_sd(a, b) _mm_ucomigt_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomigt_ss _mm_ucomigt_ss
#else
#define _pi_mm_ucomigt_ss(a, b) _mm_ucomigt_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomile_sd _mm_ucomile_sd
#else
#define _pi_mm_ucomile_sd(a, b) _mm_ucomile_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomile_ss _mm_ucomile_ss
#else
#define _pi_mm_ucomile_ss(a, b) _mm_ucomile_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomilt_sd _mm_ucomilt_sd
#else
#define _pi_mm_ucomilt_sd(a, b) _mm_ucomilt_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomilt_ss _mm_ucomilt_ss
#else
#define _pi_mm_ucomilt_ss(a, b) _mm_ucomilt_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomineq_sd _mm_ucomineq_sd
#else
#define _pi_mm_ucomineq_sd(a, b) _mm_ucomineq_sd((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_ucomineq_ss _mm_ucomineq_ss
#else
#define _pi_mm_ucomineq_ss(a, b) _mm_ucomineq_ss((a).native_obj, (b).native_obj)
#endif
#ifdef WIN32
#define _pi_mm_undefined_pd _mm_undefined_pd
#else
#define _pi_mm_undefined_pd() from_native_obj(_mm_undefined_pd())
#endif
#ifdef WIN32
#define _pi_mm_undefined_ps _mm_undefined_ps
#else
#define _pi_mm_undefined_ps() from_native_obj(_mm_undefined_ps())
#endif
#ifdef WIN32
#define _pi_mm_undefined_si128 _mm_undefined_si128
#else
#define _pi_mm_undefined_si128() from_native_obj(_mm_undefined_si128())
#endif
#ifdef WIN32
#define _pi_mm_unpackhi_epi16 _mm_unpackhi_epi16
#else
#define _pi_mm_unpackhi_epi16(a, b)                                            \
    from_native_obj(_mm_unpackhi_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpackhi_epi32 _mm_unpackhi_epi32
#else
#define _pi_mm_unpackhi_epi32(a, b)                                            \
    from_native_obj(_mm_unpackhi_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpackhi_epi64 _mm_unpackhi_epi64
#else
#define _pi_mm_unpackhi_epi64(a, b)                                            \
    from_native_obj(_mm_unpackhi_epi64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpackhi_epi8 _mm_unpackhi_epi8
#else
#define _pi_mm_unpackhi_epi8(a, b)                                             \
    from_native_obj(_mm_unpackhi_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpackhi_pd _mm_unpackhi_pd
#else
#define _pi_mm_unpackhi_pd(a, b)                                               \
    from_native_obj(_mm_unpackhi_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpackhi_pi16 _mm_unpackhi_pi16
#else
#define _pi_mm_unpackhi_pi16(a, b)                                             \
    from_native_obj(_mm_unpackhi_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpackhi_pi32 _mm_unpackhi_pi32
#else
#define _pi_mm_unpackhi_pi32(a, b)                                             \
    from_native_obj(_mm_unpackhi_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpackhi_pi8 _mm_unpackhi_pi8
#else
#define _pi_mm_unpackhi_pi8(a, b)                                              \
    from_native_obj(_mm_unpackhi_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpackhi_ps _mm_unpackhi_ps
#else
#define _pi_mm_unpackhi_ps(a, b)                                               \
    from_native_obj(_mm_unpackhi_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpacklo_epi16 _mm_unpacklo_epi16
#else
#define _pi_mm_unpacklo_epi16(a, b)                                            \
    from_native_obj(_mm_unpacklo_epi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpacklo_epi32 _mm_unpacklo_epi32
#else
#define _pi_mm_unpacklo_epi32(a, b)                                            \
    from_native_obj(_mm_unpacklo_epi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpacklo_epi64 _mm_unpacklo_epi64
#else
#define _pi_mm_unpacklo_epi64(a, b)                                            \
    from_native_obj(_mm_unpacklo_epi64((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpacklo_epi8 _mm_unpacklo_epi8
#else
#define _pi_mm_unpacklo_epi8(a, b)                                             \
    from_native_obj(_mm_unpacklo_epi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpacklo_pd _mm_unpacklo_pd
#else
#define _pi_mm_unpacklo_pd(a, b)                                               \
    from_native_obj(_mm_unpacklo_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpacklo_pi16 _mm_unpacklo_pi16
#else
#define _pi_mm_unpacklo_pi16(a, b)                                             \
    from_native_obj(_mm_unpacklo_pi16((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpacklo_pi32 _mm_unpacklo_pi32
#else
#define _pi_mm_unpacklo_pi32(a, b)                                             \
    from_native_obj(_mm_unpacklo_pi32((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpacklo_pi8 _mm_unpacklo_pi8
#else
#define _pi_mm_unpacklo_pi8(a, b)                                              \
    from_native_obj(_mm_unpacklo_pi8((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_unpacklo_ps _mm_unpacklo_ps
#else
#define _pi_mm_unpacklo_ps(a, b)                                               \
    from_native_obj(_mm_unpacklo_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_xor_pd _mm_xor_pd
#else
#define _pi_mm_xor_pd(a, b)                                                    \
    from_native_obj(_mm_xor_pd((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_xor_ps _mm_xor_ps
#else
#define _pi_mm_xor_ps(a, b)                                                    \
    from_native_obj(_mm_xor_ps((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_xor_si128 _mm_xor_si128
#else
#define _pi_mm_xor_si128(a, b)                                                 \
    from_native_obj(_mm_xor_si128((a).native_obj, (b).native_obj))
#endif
#ifdef WIN32
#define _pi_mm_xor_si64 _mm_xor_si64
#else
#define _pi_mm_xor_si64(a, b)                                                  \
    from_native_obj(_mm_xor_si64((a).native_obj, (b).native_obj))
#endif
